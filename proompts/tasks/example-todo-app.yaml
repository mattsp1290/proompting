# Todo App - Example Task File
# This serves as a reference for creating new task files
# Project: Simple Todo Application with React
# Created: 2025-05-31

metadata:
  project: todo-app
  description: A simple todo application to demonstrate task structure and best practices
  tech_stack:
    - React 18
    - TypeScript
    - Vite
    - CSS Modules
    - Local Storage API
    - Jest for testing

phases:
  - name: "Phase 1: Project Setup"
    tasks:
      - id: init-project
        name: "Initialize Vite React TypeScript project"
        description: "Create a new Vite project with React and TypeScript template"
        priority: critical
        status: pending
        
      - id: setup-structure
        name: "Set up project folder structure"
        description: "Create src/components, src/types, src/utils directories"
        priority: high
        status: pending
        dependencies: [init-project]
        
      - id: setup-css
        name: "Configure CSS modules"
        description: "Set up CSS modules for component-scoped styling"
        priority: medium
        status: pending
        dependencies: [init-project]

  - name: "Phase 2: Core Components"
    tasks:
      - id: create-types
        name: "Define TypeScript interfaces"
        description: "Create Todo interface with id, text, completed, createdAt fields"
        priority: high
        status: pending
        dependencies: [setup-structure]
        
      - id: create-todo-item
        name: "Build TodoItem component"
        description: "Create component to display individual todo with checkbox and delete button"
        priority: critical
        status: pending
        dependencies: [create-types]
        
      - id: create-todo-list
        name: "Build TodoList component"
        description: "Create component to render list of TodoItems with proper key handling"
        priority: critical
        status: pending
        dependencies: [create-todo-item]
        
      - id: create-add-todo
        name: "Build AddTodo component"
        description: "Create form component with input field and submit button"
        priority: critical
        status: pending
        dependencies: [create-types]

  - name: "Phase 3: State Management"
    tasks:
      - id: implement-local-storage
        name: "Create localStorage utility"
        description: "Build functions to save/load todos from localStorage"
        priority: high
        status: pending
        dependencies: [create-types]
        
      - id: implement-todo-logic
        name: "Implement todo CRUD operations"
        description: "Create functions for add, toggle, delete todo items"
        priority: critical
        status: pending
        dependencies: [implement-local-storage]
        
      - id: wire-up-app
        name: "Connect components in App.tsx"
        description: "Wire up all components with state and event handlers"
        priority: critical
        status: pending
        dependencies: [create-todo-list, create-add-todo, implement-todo-logic]

  - name: "Phase 4: Styling"
    tasks:
      - id: create-base-styles
        name: "Set up base CSS styles"
        description: "Create global styles, CSS reset, and typography"
        priority: medium
        status: pending
        dependencies: [setup-css]
        
      - id: style-components
        name: "Style all components"
        description: "Add CSS modules for each component with responsive design"
        priority: medium
        status: pending
        dependencies: [create-base-styles, wire-up-app]
        
      - id: add-animations
        name: "Add subtle animations"
        description: "Implement fade-in/out animations for todo items"
        priority: low
        status: pending
        dependencies: [style-components]

  - name: "Phase 5: Testing"
    tasks:
      - id: setup-jest
        name: "Configure Jest and React Testing Library"
        description: "Set up testing environment with TypeScript support"
        priority: high
        status: pending
        dependencies: [wire-up-app]
        
      - id: write-unit-tests
        name: "Write component unit tests"
        description: "Create tests for TodoItem, TodoList, and AddTodo components"
        priority: high
        status: pending
        dependencies: [setup-jest]
        
      - id: write-integration-tests
        name: "Write integration tests"
        description: "Test complete user flows: add, complete, delete todos"
        priority: medium
        status: pending
        dependencies: [write-unit-tests]

  - name: "Phase 6: Polish & Deploy"
    tasks:
      - id: add-empty-state
        name: "Create empty state UI"
        description: "Design and implement UI for when no todos exist"
        priority: low
        status: pending
        dependencies: [style-components]
        
      - id: add-filters
        name: "Add filter functionality"
        description: "Implement All/Active/Completed filters"
        priority: medium
        status: pending
        dependencies: [wire-up-app]
        
      - id: build-production
        name: "Create production build"
        description: "Run build process and verify output"
        priority: high
        status: pending
        dependencies: [write-integration-tests]
        
      - id: deploy-app
        name: "Deploy to hosting service"
        description: "Deploy to Vercel/Netlify/GitHub Pages"
        priority: medium
        status: pending
        dependencies: [build-production]

dependencies:
  external: []  # This simple project has no external dependencies

notes:
  - "Keep components small and focused on single responsibility"
  - "Use semantic HTML for better accessibility"
  - "Implement proper error boundaries for production readiness"
  - "Consider adding keyboard shortcuts for power users"
  - "LocalStorage has 5-10MB limit - consider alternatives for larger datasets"
  - "Add proper TypeScript strict mode for better type safety"
  - "Use React.memo() for performance optimization where needed"
  
updates:
  - "2025-05-31: Initial task breakdown created as example reference"
